[{"/home/marouan/docker/MyNote/mynote-fe/src/index.js":"1","/home/marouan/docker/MyNote/mynote-fe/src/reportWebVitals.js":"2","/home/marouan/docker/MyNote/mynote-fe/src/App.js":"3","/home/marouan/docker/MyNote/mynote-fe/src/PostForm.js":"4"},{"size":500,"mtime":1627736282013,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1627736282013,"results":"7","hashOfConfig":"6"},{"size":358,"mtime":1627736282105,"results":"8","hashOfConfig":"6"},{"size":4532,"mtime":1627772457757,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"3o811p",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/marouan/docker/MyNote/mynote-fe/src/index.js",[],["20","21"],"/home/marouan/docker/MyNote/mynote-fe/src/reportWebVitals.js",[],"/home/marouan/docker/MyNote/mynote-fe/src/App.js",[],"/home/marouan/docker/MyNote/mynote-fe/src/PostForm.js",["22"],"import React, { Component } from 'react'\nimport {Button, Card, Header, Form, Input, Icon, TextArea } from \"semantic-ui-react\";\nimport axios from 'axios'\nclass PostForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tid: '',\n\t\t\ttitle: '',\n\t\t\ttext: '',\n\t\t\tedit: false,\n\t\t\teditId: ''\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tthis.getNote();\n\t}\n\tchangeHandler = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value })\n\t}\n  \n\tgetNote = () => {\n    axios.get(\"/api/retrieve\").then(res => {\n      if (res && res.data) {\n        this.setState({\n          items: res.data.map(item => {\n\n            return (\n\t\t\t\t\n              <Card id={item.id}  fluid>\n\t\t\t\t  \n\t\t\t\t{ this.state.editId === item.id ? (\n\t\t\t\t\t\t<Form >\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.title}\n\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tplaceholder=\"Title of note\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tplaceholder=\"Content of note\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t<Button onClick={() => { this.updateteHandler(item.id); this.setState({ edit: false ,editId: '0'});}}>Edit Note</Button>\n\t\t\t\t\t\t</Form>\n\n\t\t\t\t):(\n\t\t\t\t  \n                <Card.Content>\n                  <Card.Header textAlign=\"left\">\n                    <div style={{ wordWrap: \"break-word\" }}>{item.id} {item.title}</div>\n                    <br/>\n                    <div style={{ wordWrap: \"break-word\" }}>{item.text}</div>\n                  </Card.Header>\n\n                  <Card.Meta textAlign=\"right\">\n                    <Icon\n                      name=\"check circle\"\n                      color=\"green\"\n                    />\n                    <span style={{ paddingRight: 10 }}>Done</span>\n                    <Button\n                      name=\"edit\"\n                      color=\"yellow\"\n\t\t\t\t\t  onClick={() => {  this.setState({ edit: true,editId: item.id});}}\n                    />\n                    <span style={{ paddingRight: 10 }}>Edit</span>\n                    <Button\n                      name=\"delete\"\n                      color=\"red\"\n\t\t\t\t\t  onClick={() => this.deleteHandler(item.id)}\n                    />\n                    <span style={{ paddingRight: 10 }}>Delete</span>\n                  </Card.Meta>\n                </Card.Content>\n\t\t\t\t)}\n              </Card>\n            );\n          })\n        });\n      } else {\n        this.setState({\n          items: []\n        });\n      }\n    });\n  };\n\tsubmitHandler = e => {\n\t\te.preventDefault()\n\t\tconsole.log(this.state)\n\t\taxios\n\t\t\t.post('/api/store', this.state)\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\twindow.location.reload(false);\n\t}\n\tdeleteHandler(id) {\n\t//\te.preventDefault()\n\t\tconst url = '/api/delete/'+id\n\t\tconsole.log(this.state)\n\t\taxios\n\t\t\t.delete(url)\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\twindow.location.reload(false);\n\t}\n\teditHandle(id){\n\t\tthis.setState({ edit: true ,editId: id})\n\t}\n\tupdateHandler(id) {\n\t//\te.preventDefault()\n\t\tconst url = '/api/update/'+id\n\t\tconsole.log(this.state)\n\t\tthis.setState({ edit: true })\t\n\t\taxios\n\t\t\t.put(url, this.state)\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error)\n\t\t\t})\n\t\twindow.location.reload(false);\n\t\t}\n\n\n\trender() {\n\t\tconst { id, title, text} = this.state\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t<Header as='h1' content='MyNote APP' style={{marginTop: '3em',marginBottom: '3em'}} textAlign='center' />\n\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<Form onSubmit={this.submitHandler}>\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tplaceholder=\"Title of note\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t\t\t<TextArea\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={text}\n\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\t\t\tplaceholder=\"Content of note\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t\t<Button type=\"submit\">Create Note</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t<Card.Group>{this.state.items}</Card.Group>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default PostForm\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":148,"column":11,"nodeType":"29","messageId":"30","endLine":148,"endColumn":13},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]